-- Simple UI Library (Violet/Blue Theme)

local SimpleUI = {}

local colors = {
    background = Color3.fromRGB(40, 30, 50),  -- Dark Purple
    panel = Color3.fromRGB(60, 45, 75),     -- Slightly Lighter Purple
    button = Color3.fromRGB(80, 60, 100),    -- Lighter Purple
    buttonHover = Color3.fromRGB(100, 80, 120), -- Even Lighter Purple
    text = Color3.fromRGB(200, 200, 255),   -- Light Bluish White
    accent = Color3.fromRGB(100, 100, 255),  -- Light Blue
    toggleOn = Color3.fromRGB(120, 100, 255), -- Light Blue
    toggleOff = Color3.fromRGB(70, 50, 80),   -- Darker Purple
    dropdownBackground = Color3.fromRGB(50, 40, 65), -- Dark Purple for Dropdown
    dropdownOption = Color3.fromRGB(70, 55, 85),   -- Slightly Lighter for Options
    inputBackground = Color3.fromRGB(50, 40, 65),
}

local function createFrame(parent, props)
    local frame = Instance.new("Frame")
    frame.Parent = parent
    for k, v in pairs(props) do
        frame[k] = v
    end
    return frame
end

local function createTextLabel(parent, props)
    local label = Instance.new("TextLabel")
    label.Parent = parent
    for k, v in pairs(props) do
        label[k] = v
    end
    return label
end

local function createTextButton(parent, props, callback)
    local button = Instance.new("TextButton")
    button.Parent = parent
    for k, v in pairs(props) do
        button[k] = v
    end
    if callback then
        button.MouseButton1Click:Connect(callback)
    end
      -- Hover effect (using MouseEnter and MouseLeave)
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = colors.buttonHover
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = colors.button
    end)
    return button
end

local function createImageLabel(parent, props)
  local imageLabel = Instance.new("ImageLabel")
  imageLabel.Parent = parent
  for k, v in pairs(props) do
    imageLabel[k] = v
  end
  return imageLabel
end



function SimpleUI:Load(title)
    local gui = Instance.new("ScreenGui")
    gui.Name = "SimpleUIGui"
    gui.ResetOnSpawn = false
    gui.Parent = game:GetService("CoreGui") -- Or game.Players.LocalPlayer.PlayerGui

    local mainFrame = createFrame(gui, {
        Name = "MainFrame",
        Size = UDim2.new(0.5, 0, 0.8, 0),  -- Adjust size as needed
        Position = UDim2.new(0.25, 0, 0.1, 0), -- Center on screen
        BackgroundColor3 = colors.background,
        BorderSizePixel = 0,
        Active = true,
        Draggable = true,
    })
     -- Title Bar
    local titleBar = createFrame(mainFrame, {
        Name = "TitleBar",
        Size = UDim2.new(1, 0, 0, 30),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = colors.panel,
        BorderSizePixel = 0,
    })

    local titleLabel = createTextLabel(titleBar, {
        Name = "TitleLabel",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Color3.new(1, 1, 1),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        Font = Enum.Font.SourceSansBold,
        Text = title or "GUI",
        TextColor3 = colors.text,
        TextSize = 18,
        TextXAlignment = Enum.TextXAlignment.Left,
    })

        -- Close Button (small 'X')
    local closeButton = createTextButton(titleBar, {
        Name = "CloseButton",
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(1, -25, 0, 5),  -- Position in top-right
        BackgroundColor3 = colors.button,
        BorderSizePixel = 0,
        Font = Enum.Font.SourceSansBold,
        Text = "X",
        TextColor3 = colors.text,
        TextSize = 14,
      },
      function()
          gui:Destroy()
      end
      )


    local tabsFrame = createFrame(mainFrame, {
        Name = "TabsFrame",
        Size = UDim2.new(0.2, 0, 0.9, 0),
        Position = UDim2.new(0, 0, 0, 30),
        BackgroundColor3 = colors.panel,
        BorderSizePixel = 0,
    })

    local contentFrame = createFrame(mainFrame, {
        Name = "ContentFrame",
        Size = UDim2.new(0.8, 0, 0.9, 0),
        Position = UDim2.new(0.2, 0, 0, 30),
        BackgroundColor3 = colors.panel,
        BorderSizePixel = 0,
        ClipsDescendants = true, -- Important for scrolling
    })

    local tabs = {}
    local currentTab = nil

    local function createTab(name, icon)
        local tabButton = createTextButton(tabsFrame, {
            Name = name .. "Button",
            Size = UDim2.new(1, 0, 0, 30),
            Position = UDim2.new(0, 0, 0, (#tabs * 30)),  -- Stack vertically
            BackgroundColor3 = colors.button,
            BorderSizePixel = 0,
            Font = Enum.Font.SourceSans,
            Text = name,
            TextColor3 = colors.text,
            TextSize = 14,
        }, function()
            if currentTab then
                currentTab.frame.Visible = false
            end
            currentTab = tabs[name]
            currentTab.frame.Visible = true
        end)

        local tabFrame = createFrame(contentFrame, {
            Name = name .. "Frame",
            Size = UDim2.new(1, 0, 1, 0),
            Position = UDim2.new(0, 0, 0, 0),
            BackgroundColor3 = colors.panel,
            BorderSizePixel = 0,
            Visible = false, -- Initially hidden
        })
        -- ScrollingFrame inside tabFrame
        local scrollingFrame = Instance.new("ScrollingFrame")
        scrollingFrame.Parent = tabFrame
        scrollingFrame.Size = UDim2.new(1, 0, 1, 0)  -- Fill the tabFrame
        scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
        scrollingFrame.BackgroundColor3 = colors.panel
        scrollingFrame.BorderSizePixel = 0
        scrollingFrame.ScrollBarThickness = 8 -- Make the scrollbar visible
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Initially zero
        scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y -- Auto adjust height
        scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
        scrollingFrame.ScrollBarImageColor3 = colors.accent

      -- Add image if there's an icon
      if icon then
        local image = createImageLabel(tabButton, {
            Name = "TabIcon",
            Size = UDim2.new(0, 20, 0, 20),  -- Adjust the size of the icon
            Position = UDim2.new(0, 5, 0, 5),  -- Position the icon
            BackgroundTransparency = 1,
            Image = icon,
        })
          -- Adjust text position to accomodate the icon
          tabButton.TextXAlignment = Enum.TextXAlignment.Right
          tabButton.Text = "   " .. name
      end

        tabs[name] = {button = tabButton, frame = tabFrame, scrollingFrame = scrollingFrame, nextY = 10}

        return tabs[name]
    end

    local function newLabel(tab, text)
        local label = createTextLabel(tab.scrollingFrame, {
            Name = "Label_" .. text,
            Size = UDim2.new(0.9, 0, 0, 25),
            Position = UDim2.new(0.05, 0, 0, tab.nextY),
            BackgroundColor3 = Color3.new(1, 1, 1),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Font = Enum.Font.SourceSansBold,
            Text = text,
            TextColor3 = colors.text,
            TextSize = 16,
            TextXAlignment = Enum.TextXAlignment.Left,

        })
        tab.nextY = tab.nextY + 35
        return label
    end

    local function newButton(tab, text, callback)
      local button = createTextButton(tab.scrollingFrame, {
          Name = "Button_" .. text,
          Size = UDim2.new(0.9, 0, 0, 30),
          Position = UDim2.new(0.05, 0, 0, tab.nextY),
          BackgroundColor3 = colors.button,
          BorderSizePixel = 0,
          Font = Enum.Font.SourceSans,
          Text = text,
          TextColor3 = colors.text,
          TextSize = 14,
      }, callback)
      tab.nextY = tab.nextY + 40
      return button
    end

    local function newToggle(tab, text, defaultState, callback)
        local toggleFrame = createFrame(tab.scrollingFrame, {
            Name = "ToggleFrame_" .. text,
            Size = UDim2.new(0.9, 0, 0, 30),
            Position = UDim2.new(0.05, 0, 0, tab.nextY),
            BackgroundColor3 = Color3.new(1,1,1),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
        })

        local toggleButton = createFrame(toggleFrame, {
            Name = "ToggleButton",
            Size = UDim2.new(0, 20, 0, 20),
            Position = UDim2.new(0, 0, 0, 5),
            BackgroundColor3 = defaultState and colors.toggleOn or colors.toggleOff, -- Initial state
            BorderSizePixel = 0,
        })
        local toggleState = defaultState
        local toggleLabel = createTextLabel(toggleFrame, {
            Name = "ToggleLabel",
            Size = UDim2.new(0.8, 0, 1, 0),
            Position = UDim2.new(0.15, 0, 0, 0),
            BackgroundColor3 = Color3.new(1,1,1),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            Font = Enum.Font.SourceSans,
            Text = text,
            TextColor3 = colors.text,
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
        })
         --Click event
        toggleButton.MouseButton1Click:Connect(function()
            toggleState = not toggleState
            toggleButton.BackgroundColor3 = toggleState and colors.toggleOn or colors.toggleOff
            if callback then
                callback(toggleState)
            end
        end)

        tab.nextY = tab.nextY + 40
        return toggleFrame
    end

    local function newDropdown(tab, text, options, callback)
    local dropdownFrame = createFrame(tab.scrollingFrame, {
        Name = "DropdownFrame_" .. text,
        Size = UDim2.new(0.9, 0, 0, 30),
        Position = UDim2.new(0.05, 0, 0, tab.nextY),
        BackgroundColor3 = colors.dropdownBackground,
        BorderSizePixel = 0,
    })

    local dropdownLabel = createTextLabel(dropdownFrame, {
        Name = "DropdownLabel",
        Size = UDim2.new(0.8, 0, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = colors.dropdownBackground,
        BorderSizePixel = 0,
        Font = Enum.Font.SourceSans,
        Text = text .. ": " .. (options[1] or ""), -- Show first option initially
        TextColor3 = colors.text,
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left,

    })

    local dropdownButton = createTextButton(dropdownFrame, { -- Use TextButton, not Frame
        Name = "DropdownButton",
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(1, -25, 0, 5),
        BackgroundColor3 = colors.button,
        BorderSizePixel = 0,
        Font = Enum.Font.SourceSans,
        Text = "V",  -- Downward arrow
        TextColor3 = colors.text,
        TextSize = 14,
    })

    local optionsFrame = createFrame(dropdownFrame, {
        Name = "OptionsFrame",
        Size = UDim2.new(1, 0, 0, 0), -- Initially zero height
        Position = UDim2.new(0, 0, 1, 0),
        BackgroundColor3 = colors.dropdownBackground,
        BorderSizePixel = 0,
        Visible = false, -- Hidden by default
        ClipsDescendants = true,
    })

    local function closeDropdown()
        optionsFrame.Visible = false
        optionsFrame.Size = UDim2.new(1, 0, 0, 0) -- Reset height
    end


    local function createOptionButton(optionText, index)
        local optionButton = createTextButton(optionsFrame, {
            Name = "Option_" .. optionText,
            Size = UDim2.new(1, 0, 0, 25),
            Position = UDim2.new(0, 0, 0, (index - 1) * 25),
            BackgroundColor3 = colors.dropdownOption,
            BorderSizePixel = 0,
            Font = Enum.Font.SourceSans,
            Text = optionText,
            TextColor3 = colors.text,
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
        }, function()
            dropdownLabel.Text = text .. ": " .. optionText
            closeDropdown()
            if callback then
                callback(optionText)
            end
        end)

       -- Remove hover effect for dropdown options
        optionButton.MouseEnter:Disconnect(optionButton.MouseEnter)
        optionButton.MouseLeave:Disconnect(optionButton.MouseLeave)

    end
    -- Create option buttons
    for i, option in ipairs(options) do
        createOptionButton(option, i)
    end

    -- Dropdown button click - toggle options visibility
    dropdownButton.MouseButton1Click:Connect(function()
        if optionsFrame.Visible then
            closeDropdown()
        else
            optionsFrame.Visible = true
            optionsFrame.Size = UDim2.new(1, 0, 0, #options * 25) -- Set height based on options
        end
    end)

    -- Click outside to close (using the main frame)
    mainFrame.MouseButton1Click:Connect(function(x,y)
        -- Check if the click is outside the dropdown
        local dropdownAbsolutePos = dropdownFrame.AbsolutePosition
        local dropdownAbsoluteSize = dropdownFrame.AbsoluteSize

        if not (x >= dropdownAbsolutePos.X and x <= dropdownAbsolutePos.X + dropdownAbsoluteSize.X and
                y >= dropdownAbsolutePos.Y and y <= dropdownAbsolutePos.Y + dropdownAbsoluteSize.Y) then
             closeDropdown()
        end

    end)
    tab.nextY = tab.nextY + 40 -- Add space for the dropdown

    return dropdownFrame
end

  local function newInput(tab, text, callback)
      local inputFrame = createFrame(tab.scrollingFrame, {
          Name = "InputFrame_" .. text,
          Size = UDim2.new(0.9, 0, 0, 30),
          Position = UDim2.new(0.05, 0, 0, tab.nextY),
          BackgroundColor3 = colors.inputBackground,
          BorderSizePixel = 0,
      })

      local inputLabel = createTextLabel(inputFrame, {
          Name = "InputLabel",
          Size = UDim2.new(0.4, 0, 1, 0),
          Position = UDim2.new(0, 0, 0, 0),
          BackgroundColor3 = colors.inputBackground,
          BorderSizePixel = 0,
          Font = Enum.Font.SourceSans,
          Text = text .. ":",
          TextColor3 = colors.text,
          TextSize = 14,
          TextXAlignment = Enum.TextXAlignment.Left
      })

      local textBox = Instance.new("TextBox")
      textBox.Parent = inputFrame
      textBox.Size = UDim2.new(0.5, 0, 1, 0)
      textBox.Position = UDim2.new(0.4, 0, 0, 0)
      textBox.BackgroundColor3 = colors.inputBackground
      textBox.BorderSizePixel = 0
      textBox.Font = Enum.Font.SourceSans
      textBox.Text = ""
      textBox.TextColor3 = colors.text
      textBox.TextSize = 14
      textBox.ClearTextOnFocus = false

      textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed and callback then
                callback(textBox.Text)
            end
      end)
      tab.nextY = tab.nextY + 40
      return inputFrame

  end

    return {newTab = createTab, newLabel = newLabel, newButton = newButton, newToggle = newToggle, newDropdown = newDropdown, newInput = newInput}
end


-- Usage (replace your existing UI code with this):

local SimpleUI = SimpleUI:Load("Infectious Smile GUI")

local tab1 = SimpleUI.newTab("Infectious smile", "rbxassetid://1129583422") -- Keep the icon

tab1.newLabel("Human")

tab1.newDropdown("Fast weapon", "Makes your equipment faster", {"Bat", "Bottle", "Katana", "Branch", "Spare", "Chain"}, function(selectedOption)
    if selectedOption == "Bat" then
local targetToolName = "Bat"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Bat.Cooldown.Value = 0
end
if selectedOption == "Bottle" then
local targetToolName = "Bottle"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Bottle.Cooldown.Value = 0
end
if selectedOption == "Katana" then
local targetToolName = "Katana"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Katana.Cooldown.Value = 0
end
if selectedOption == "Branch" then
local targetToolName = "Branch"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Branch.Cooldown.Value = 0
end
if selectedOption == "Spare" then
local targetToolName = "Spare"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Spare.Cooldown.Value = 0
end
if selectedOption == "Chain" then
local targetToolName = "Chain"

local player = game.Players.LocalPlayer
local function equipTool()
    local backpack = player.Backpack
    local character = player.Character

    local targetTool = backpack:FindFirstChild(targetToolName)
    if targetTool then
        targetTool.Parent = character
    end
end

equipTool()

wait(0.1)

game.Players.LocalPlayer.Character.Chain.Cooldown.Value = 0
end
end)

tab1.newToggle("Remove killbricks", "Removes all blocks that instantly kill you", true, function(toggleState)
    if toggleState then
        local player = game:GetService("Players").LocalPlayer
while task.wait() do
local parts = workspace:GetPartBoundsInRadius(player.Character:WaitForChild("HumanoidRootPart").Position, 10)
for _, part in ipairs(parts) do
part.CanTouch = true
end
end
    else
        local player = game:GetService("Players").LocalPlayer
while task.wait() do
local parts = workspace:GetPartBoundsInRadius(player.Character:WaitForChild("HumanoidRootPart").Position, 10)
for _, part in ipairs(parts) do
part.CanTouch = fasle
end
end
    end
end)

tab1.newInput("Input reach", "Reset to turn it off", function(text)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local function equipTool(toolName)
    local tool = player.Backpack:FindFirstChild(toolName)
    if tool then
        tool.Parent = character
        wait()
        tool.Parent = player.Character
    end
end

equipTool("Bottle")
equipTool("Branch")

    for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren()) do
  if v:isA("Tool") then
   local a = Instance.new("SelectionBox",v.Handle)
   v.Handle.Massless = true
   v.Handle.Transparency = 1
   a.Adornee = v.Handle
   v.Handle.Size = Vector3.new(text, text, text)
   local selectionBox = Instance.new("SelectionBox",v.Handle)
   selectionBox.Adornee = v.Handle
   selectionBox.Color3 = Color3.new(0, 0.313725, 0.47451)
  end
 end
end)

tab1.newToggle("Weapon giver", "Press this button to turn it on (works remotely)", true, function(toggleState)
    if toggleState then
        game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = fasle
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
    else
        game:GetService("CoreGui").PurchasePrompt.Enabled = false
_G.Lag = true
while _G.Lag do
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
  wait(1)
  end
    end
end)

tab1.newButton("Get weapons", "Gives weapons", function()
last_pick_sin_mrazy = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-18, 6, -14)
task.wait()
game:GetService("CoreGui").PurchasePrompt.Enabled = false
for i,v in pairs(workspace:GetDescendants()) do
   if v:IsA("ClickDetector") then
    fireclickdetector(v)
   end
end
task.wait()
game. Players.LocalPlayer.Character.HumanoidRootPart.CFrame = last_pick_sin_mrazy
end)

tab1.newButton("Delete tool", "Removes tool in hand", function()
local player = game.Players.LocalPlayer
local function removeTool()
    local character = player.Character
    local tool = character:FindFirstChildOfClass("Tool")
    if tool then
        tool:Destroy()
    end
end

removeTool()
end)

tab1.newToggle("Anti inventory block", "Well, now you understand", true, function(toggleState)
DS = toggleState
while DS do
task.wait()
local StarterGui = game:GetService("StarterGui")
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
end
end)

tab1.newButton("Anti infection", "You won't be able to get infected except the players", function()
    for _,v in pairs(game.workspace:GetDescendants()) do

if string.find(v.Name,"Infector") then
v:Destroy()
end
end
end)

tab1.newToggle("Anti infected players", "Fling players", true, function(toggleState)
    if toggleState then
        if game:GetService("ReplicatedStorage"):FindFirstChild("juisdfj0i32i0eidsuf0iok") then
		 hiddenfling = true
	 else
		 hiddenfling = true
		 detection = Instance.new("Decal")
		 detection.Name = "juisdfj0i32i0eidsuf0iok"
		 detection.Parent = game:GetService("ReplicatedStorage")
		 local function fling()
			 local hrp, c, vel, movel = nil, nil, nil, 0.1
			 while true do
				 game:GetService("RunService").Heartbeat:Wait()
				 if hiddenfling then
					 local lp = game.Players.LocalPlayer
					 while hiddenfling and not (c and c.Parent and hrp and hrp.Parent) do
						 game:GetService("RunService").Heartbeat:Wait()
						 c = lp.Character
						 hrp = c:FindFirstChild("HumanoidRootPart") or c:FindFirstChild("Torso") or c:FindFirstChild("UpperTorso")
					 end
					 if hiddenfling then
						 vel = hrp.Velocity
						 hrp.Velocity = vel * 100000 + Vector3.new(0, 100000, 0)
						game:GetService("RunService").RenderStepped:Wait()
						 if c and c.Parent and hrp and hrp.Parent then
							 hrp.Velocity = vel
						 end
						 game:GetService("RunService").Stepped:Wait()
						 if c and c.Parent and hrp and hrp.Parent then
							 hrp.Velocity = vel + Vector3.new(0, movel, 0)
							 movel = movel * -1
						 end
					 end
				 end
			 end
		 end

		 fling()
	 end
    else
        hiddenfling = fasle
    end
end)

tab1.newButton("AntiCheat destroy", "Removes killbricks outside the server boundary", function()
    workspace.Map.AntiHack:Destroy() game.Players.LocalPlayer.Character.AntiFly:Destroy()
end)

tab1.newLabel("Smile")

tab1.newButton("Infect", "Infects you", function()
    workspace.Map.Infectors.Infector.Part.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
workspace.Map.Infectors.Infector.Part.CanCollide = false
game.Players.LocalPlayer.Character.Infected.InfectedSpeed.Value = 0
end)

tab1.newButton("Anti Yellow doors", "Removes yellow doors", function()
    for _,v in pairs(game.workspace:GetDescendants()) do

if string.find(v.Name,"AntiSmiler") then
v:Destroy()
end
end
end)

tab1.newToggle("Auto infection", "Well, now you understand", true, function(toggleState)
hh = toggleState
while hh do
    wait()
   game:GetService("Players").LocalPlayer.Character.Infected.InfectEvent:FireServer()
 end
end)

tab1.newInput("Grab player", "There may be disturbances", function(text)
last_pick_sin_mrazy = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

    PlayerName = text
local function findPlayer(name)
    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Name:lower():match(name:lower()) or player.DisplayName:lower():match(name:lower()) then
            return player
        end
    end
    return nil
end

local function teleportToPlayer(targetPlayer)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local targetCharacter = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    local targetHumanoidRootPart = targetCharacter:WaitForChild("HumanoidRootPart")

    humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame
end

local targetName = PlayerName
local targetPlayer = findPlayer(targetName)

if targetPlayer then

local Services = setmetatable({}, {__index = function(Self, Index)
local NewService = game.GetService(game, Index)
if NewService then
Self[Index] = NewService
end
return NewService
end})

local LocalPlayer = Services.Players.LocalPlayer

local function PlayerAdded(Player)
   local Detected = false
   local Character;
   local PrimaryPart;
   local function CharacterAdded(NewCharacter)
       Character = NewCharacter
       repeat
           wait()
           PrimaryPart = NewCharacter:FindFirstChild("HumanoidRootPart")
       until PrimaryPart
       Detected = false
   end

   CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
   Player.CharacterAdded:Connect(CharacterAdded)
   Services.RunService.Heartbeat:Connect(function()
       if (Character and Character:IsDescendantOf(workspace)) and (PrimaryPart and PrimaryPart:IsDescendantOf(Character)) then
           if PrimaryPart.AssemblyAngularVelocity.Magnitude > 0 or PrimaryPart.AssemblyLinearVelocity.Magnitude > 0 then
               if Detected == false then

               end
               Detected = true
               for i,v in ipairs(Character:GetDescendants()) do
                   if v:IsA("BasePart") then
                       v.CanCollide = false
                       v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                       v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                       v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                   end
               end
               PrimaryPart.CanCollide = false
               PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
           end
       end
   end)
end

for i,v in ipairs(Services.Players:GetPlayers()) do
   if v ~= LocalPlayer then
       PlayerAdded(v)
   end
end
Services.Players.PlayerAdded:Connect(PlayerAdded)

for i = 1, 50 do
task.wait()
    teleportToPlayer(targetPlayer)
    game:GetService("Players").LocalPlayer.Character.Infected.InfectEvent:FireServer()
    end
    wait()
    game. Players.LocalPlayer.Character.HumanoidRootPart.CFrame = last_pick_sin_mrazy
else
    print("I don't see a player with that name")
end
end)

tab1.newToggle("Auto collecting coins", "Collects everything SmileCoins", true, function(toggleState)
if toggleState then
local jjj = true
while jjj do
wait(0.1)
local plr = game.Players.LocalPlayer.Character.Head
for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v.Name == "SmileCoin" and v:FindFirstChild("TouchInterest") then
        firetouchinterest(plr, v, 0)
    end
  end
end
else
local jjj = fasle
end
end)

tab1.newLabel("Events")

tab1.newButton("Fullbright", "You will see in the dark", function()
    pcall(function()
    local lighting = game:GetService("Lighting");
    lighting.Ambient = Color3.fromRGB(255, 255, 25